name: Nasa CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package.json
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test || true

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package.json
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test || true
      - name: Build frontend
        run: npm run build

  skai:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./skai
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: skai/requirements.txt
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run tests
        run: python manage.py test || true

  deploy-backend:
    runs-on: ubuntu-latest
    needs: [backend]
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    steps:
      - name: Deploy to Render
        run: curl -X POST ${{ secrets.RENDER_BACKEND_DEPLOY_HOOK }}

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: [frontend]
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package.json

      - name: Install dependencies
        run: npm install
        working-directory: ./frontend

      - name: Build frontend
        run: npm run build
        working-directory: ./frontend

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: ${{ github.ref == 'refs/heads/main' && '--prod' || '' }}


  deploy-skai:
    runs-on: ubuntu-latest
    needs: [skai]
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    steps:
      - name: Deploy to Render
        run: curl -X POST ${{ secrets.RENDER_SKAI_DEPLOY_HOOK }}